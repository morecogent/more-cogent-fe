AWSTemplateFormatVersion: '2010-09-09'

Description: >
  CI/CD for More Cogent

Parameters:
  PipelineName:
    Default: 'MoreCogent-CI-FE'
    Description: 'Name for More Cogent CI/CD Pipeline'
    Type: 'String'
  WebhookName:
    Default: 'MoreCogent-CI-FE'
    Description: 'Name for More Cogent CI/CD Github webhook'
    Type: 'String'
  RoleName:
    Default: 'MoreCogent-CI-FE'
    Description: 'Name for More Cogent CI/CD Pipeline role'
    Type: 'String'
  ArifactStoreBucket:
    Default: 'be-updated-builds'
    Description: 'Name for S3 bucket to store the build'
    Type: 'String'
  GithubOwner:
    Default: 'OskarKaminski'
    Description: 'Name of the github owner, who has the repo to fetch'
    Type: 'String'
  GithubRepo:
    Default: 'debates'
    Description: 'Name of the github repository'
    Type: 'String'
  GithubBranch:
    Default: 'main'
    Description: 'Name of the github branch, that should be fetched'
    Type: 'String'
  OAuthToken:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: 'Github-PAT'
    Description: 'The name of Github PAT defined in parameters store'
  GithubSecret:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: 'GITHUB_BE_UPDATED_SECRET'
    Description: 'The secret used to ensure, that webhook comes from github'

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: 'CodePipeline Settings'
        Parameters:
          - PipelineName
          - OAuthToken
          - GithubSecret
          - WebhookName

Resources:
  Build:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Artifacts:
        Type: 'CODEPIPELINE'
      Description: 'Build process to bundle the project'
      Environment:
        ComputeType: 'BUILD_GENERAL1_SMALL'
        Image: 'aws/codebuild/standard:4.0'
        Type: 'LINUX_CONTAINER'
      Name: 'MoreCogentBuild'
      ServiceRole: !GetAtt [Role, Arn]
      Source:
        Type: 'CODEPIPELINE'

  Pipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      Name: !Ref PipelineName
      RoleArn: !GetAtt [Role, Arn]
      ArtifactStore:
        Location: !Ref ArifactStoreBucket
        Type: S3
      Stages:
        - Name: 'Source'
          Actions:
            - Name: 'fetch-github'
              ActionTypeId:
                Category: 'Source'
                Owner: 'ThirdParty'
                Provider: 'GitHub'
                Version: '1'
              Configuration:
                Branch: !Ref GithubBranch
                Owner: !Ref GithubOwner
                OAuthToken: !Ref OAuthToken
                PollForSourceChanges: 'false'
                Repo: !Ref GithubRepo
              OutputArtifacts:
                - Name: 'TemplateSource'

        - Name: 'Build'
          Actions:
            - Name: 'build'
              RunOrder: 1
              ActionTypeId:
                Category: 'Build'
                Owner: 'AWS'
                Provider: 'CodeBuild'
                Version: '1'
              InputArtifacts:
                - Name: 'TemplateSource'
              Configuration:
                ProjectName: 'Build'
              OutputArtifacts:
                - Name: 'dist'

            - Name: 'deploy'
              RunOrder: 2
              ActionTypeId:
                Category: 'Deploy'
                Owner: 'AWS'
                Provider: 'S3'
                Version: '1'
              InputArtifacts:
                - Name: 'dist'
              Configuration:
                BucketName: 'more-cogent'
                Extract: 'true'

  Webhook:
    Type: 'AWS::CodePipeline::Webhook'
    Properties:
      Name: !Ref WebhookName
      Authentication: 'GITHUB_HMAC'
      AuthenticationConfiguration:
        SecretToken: !Ref GithubSecret
      Filters:
        - JsonPath: "$.ref"
          MatchEquals: 'refs/heads/main'
      TargetPipeline: !Ref PipelineName
      TargetAction: fetch-github
      TargetPipelineVersion: !GetAtt Pipeline.Version
      RegisterWithThirdParty: 'true'

  Role:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Ref RoleName
      AssumeRolePolicyDocument:
        Statement:
          - Action: ['sts:AssumeRole']
            Effect: 'Allow'
            Principal:
              Service:
                - 'codepipeline.amazonaws.com'
                - 'codebuild.amazonaws.com'
        Version: '2012-10-17'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AdministratorAccess'

Outputs:
  WebhookUrl:
    Description: 'The url for the github webhook'
    Value: !GetAtt Webhook.Url